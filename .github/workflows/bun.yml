name: bun
on:
  push:
    branches: [main, bun-actions]
    paths-ignore:
      - "examples/**"
      - "bench/**"
      - "README.*"
      - "LICENSE"
      - ".vscode"
      - ".devcontainer"
  pull_request:
    branches: [main]
    paths-ignore:
      - "examples/**"
      - "bench/**"
      - README.*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: bun-test'

jobs:
  linux-x64:
    name: Linux x64 (${{ matrix.cpu }})
    runs-on: linux-amd64
    timeout-minutes: 90
    strategy:
      matrix:
        cpu: [native, baseline]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/bun 
          docker buildx build \
            -f Dockerfile \
            --build-arg ARCH=$(uname -m) \
            --build-arg CPU_TARGET=${{matrix.cpu}} \
            --progress=plain \
            --platform=linux/$BUILDKIT_ARCH \
            --target=artifact \
            --output type=local,dest=${{runner.temp}}/release .
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-linux-amd64
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'baseline' }}
        with:
          name: bun-linux-amd64-baseline
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-dependencies-linux-amd64
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'baseline' }}
        with:
          name: bun-dependencies-linux-amd64-baseline
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-linux-amd64-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'baseline' }}
        with:
          name: bun-linux-amd64-baseline-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-obj-linux-amd64
          path: ${{runner.temp}}/release/bun-obj
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'baseline' }}
        with:
          name: bun-obj-linux-amd64-baseline
          path: ${{runner.temp}}/release/bun-obj
  linux-aarch64:
    name: Linux aarch64
    runs-on: linux-aarch64
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/bun 
          docker buildx build \
            -f Dockerfile \
            --build-arg ARCH=$(uname -m) \
            --build-arg CPU_TARGET=native \
            --progress=plain \
            --platform=linux/$BUILDKIT_ARCH \
            --target=artifact \
            --output type=local,dest=${{runner.temp}}/release .
      - uses: actions/upload-artifact@v3
        with:
          name: bun-linux-aarch64
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        with:
          name: bun-dependencies-linux-aarch64
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        with:
          name: bun-linux-aarch64-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        with:
          name: bun-obj-linux-aarch64
          path: ${{runner.temp}}/release/bun-obj
